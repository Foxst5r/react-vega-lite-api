{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["url","a","csv","data","console","log","viz","v1","size","opacity","encode","fieldQ","scale","zero","fieldN","VegaLiteComponent","chartRef","useRef","useEffect","vega","vegaLite","view","renderer","init","tooltip","Handler","call","getData","then","width","window","innerWidth","height","innerHeight","autosize","type","contains","render","chart","current","appendChild","ref","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"gQAAe,I,kGCSf,WAAuBA,GAAvB,eAAAC,EAAA,sEACqBC,YAAIF,GADzB,cACQG,EADR,OAEEC,QAAQC,IAAIF,EAAK,IAFnB,kBAGSA,GAHT,4C,sBAMA,IAGMG,EAAMC,IACC,CAAEC,KAAM,IAAKC,QAAS,KAChCC,OACCH,MAAOI,OAAO,OAAOC,MAAM,CAAEC,MAAM,IACnCN,MAAOI,OAAO,UAAUC,MAAM,CAAEC,MAAM,IACtCN,MAAWO,OAAO,UAClBP,MAAUI,OAAO,UACjBJ,MAAaO,OAAO,SAGlBC,EAAoB,WACxB,IAAMC,EAAWC,iBAAO,MAsBxB,OArBAC,qBAAU,WACRX,IAAYY,EAAMC,EAAU,CAC1BC,KAAM,CAAEC,SAAU,OAClBC,KAAM,SAACF,GACLA,EAAKG,SAAQ,IAAIC,KAAUC,W,2CAI/BC,CAtBF,wIAsBmBC,MAAK,SAACzB,GACrBG,EACGH,KAAKA,GACL0B,MAAMC,OAAOC,YACbC,OAAOF,OAAOG,aACdC,SAAS,CAAEC,KAAM,MAAOC,SAAU,YAClCC,SACAT,MAAK,SAACU,GACLtB,EAASuB,QAAQC,YAAYF,WAGlC,IAEI,qBAAKG,IAAKzB,KAOJ0B,MAJf,WACE,OAAO,cAAC,EAAD,KC3CMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASd,OACP,cAAC,IAAMe,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.f33becb7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React, { useEffect, useRef } from \"react\";\nimport * as v1 from \"vega-lite-api\";\nimport * as vega from \"vega\";\nimport * as vegaLite from \"vega-lite\";\nimport { Handler } from \"vega-tooltip\";\nimport { csv } from \"d3\";\n\nasync function getData(url) {\n  const data = await csv(url);\n  console.log(data[0]);\n  return data;\n}\n\nconst dataUrl =\n  \"https://gist.githubusercontent.com/curran/8c131a74b85d0bb0246233de2cff3f52/raw/194c2fc143790b937c42bf086a5a44cb3c55340e/auto-mpg.csv\";\n\nconst viz = v1\n  .markPoint({ size: 300, opacity: 0.5 })\n  .encode(\n    v1.x().fieldQ(\"mpg\").scale({ zero: false }),\n    v1.y().fieldQ(\"weight\").scale({ zero: false }),\n    v1.color().fieldN(\"origin\"),\n    v1.size().fieldQ(\"weight\"),\n    v1.tooltip().fieldN(\"name\")\n  );\n\nconst VegaLiteComponent = () => {\n  const chartRef = useRef(null);\n  useEffect(() => {\n    v1.register(vega, vegaLite, {\n      view: { renderer: \"svg\" },\n      init: (view) => {\n        view.tooltip(new Handler().call());\n      },\n    });\n\n    getData(dataUrl).then((data) => {\n      viz\n        .data(data)\n        .width(window.innerWidth)\n        .height(window.innerHeight)\n        .autosize({ type: \"fit\", contains: \"padding\" })\n        .render()\n        .then((chart) => {\n          chartRef.current.appendChild(chart);\n        });\n    });\n  }, []);\n\n  return <div ref={chartRef}></div>;\n};\n\nfunction App() {\n  return <VegaLiteComponent />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}